#LyX file created by tex2lyx 2.0.3
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options false
\language english
\language_package none
\inputencoding auto
\fontencoding default
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\paperfontsize default
\spacing single
\use_hyperref 0
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 0
\use_mathdots 0
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%!TEX root =article.tex
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

% 
\backslash
audecomment{consists of or in?? Jack, native speaker, we need your help!}
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

% google fight has a winner
\end_layout

\begin_layout Standard


\end_layout

\end_inset

Given the model parameters, the inference task consists in computing the probability distribution 
\begin_inset Formula $\Prob(Z^{(p)} \le t)$
\end_inset

 of the total travel time along a fixed path 
\begin_inset Formula $(p) = (p_0, \dots, p_I)$
\end_inset

. The path travel time (i.e.
\begin_inset space \space{}

\end_inset

total travel time along the path) is given by 
\begin_inset Formula \[
\pathTT{p}
= \sum_{s \in \Scal} \ind{S_{(p)} = s} \condPathTT{p}{s} 
\]
\end_inset

where 
\begin_inset Formula $\Scal = \{1, \dots, m\}^{I}$
\end_inset

 is the set of possible path states, and 
\begin_inset Formula $\condPathTT{p}{s}$
\end_inset

 is the path travel time given the path state 
\begin_inset Formula $s$
\end_inset

, and is given by 
\begin_inset Formula $\condPathTT{p}{s}  = \sum_{l \in p} Y_{l, s_l} = e(p, s)^T Y$
\end_inset

. Here, 
\begin_inset Formula $e(p, s)$
\end_inset

 is a binary vector that selects the appropriate entries in the vector of travel times 
\begin_inset Formula $Y$
\end_inset

 (corresponding to path 
\begin_inset Formula $p$
\end_inset

 with states 
\begin_inset Formula $s$
\end_inset

): 
\begin_inset Formula \[
e(p, s)_{(l, s'_l)} = 1 \eqv l \in p \text{ and } s'_l = s_l
\]
\end_inset

This vector 
\begin_inset Formula $e(p,s)$
\end_inset

 is very sparse and has precisely 
\begin_inset Formula $I$
\end_inset

 non-zero entries. Using the law of total probability we have: 
\begin_inset Formula \begin{equation}
\label{eqn:total-prob}
\Prob\left({\pathTT{p}}\right)=\sum_{s \in \Scal} \Prob(S = s)\Prob\left({\condPathTT{p}{s}}\right)
\end{equation}
\end_inset

The variable 
\begin_inset Formula $\condPathTT{p}{s} = e(p, s)^TY$
\end_inset

 is a linear combination of the multivariate variable 
\begin_inset Formula $Y$
\end_inset

, and so is also normally distributed: 
\begin_inset Formula \begin{equation}
\label{eqn:cond-prob}
\condPathTT{p}{s}\sim\mathcal{N}\left(e(p, s)^{T}\mu,e(p, s)^{T}\Sigma e(p, s)\right)
\end{equation}
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

% 
\backslash
audecomment{Don't like "is a subset of the joint multivariate distribution $Y$". Plus $
\backslash
condPathTT{p}{s}$ is a variable, not a distribution, same for $Y$. Can we say something like "The variable $
\backslash
condPathTT{p}{s} = e(p, s)^TY$ is a linear combination of the multivariate variable $Y$, and so 
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

% is also normally distributed:}
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Standard

The marginal distribution of travel times along a path is a mixture of univariate Gaussian distributions. There is however two problems for this algorithm to be practical. 
\emph on
(i)
\emph default
 The mixture from Equation
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eqn:total-prob"

\end_inset

 contains a term for each possible combination of states, and has size 
\begin_inset Formula $m^I$
\end_inset

. Enumerating all the terms is impossible for moderately large lengths of paths. 
\emph on
(ii)
\emph default
 In order to compute the variance of each distribution of the mixture, one needs to estimate the covariance matrix 
\begin_inset Formula $\Sigma$
\end_inset

. However storing (or computing) the complete covariance matrix is prohibitively expensive with millions of variables.
\end_layout

\begin_layout Standard

We find tractable solutions for 
\emph on
(i)
\emph default
 by using a sampling method on the Markov model to choose a tractable number of states, and 
\emph on
(ii)
\emph default
 by using a random projection method to construct a low-rank approximation of the covariance matrix 
\begin_inset Formula $\Sigma$
\end_inset

. Note that the mean of the complete distribution can be computed exactly in 
\begin_inset Formula $O(Im^2)$
\end_inset

 time, using a dynamic programming algorithm. Thus, our model is also applicable to situations that do not require the full distribution. We do not present this algorithm further due to space limitations. 
\begin_inset ERT
status collapsed

\begin_layout Standard

% 
\backslash
audecomment{Shall we add a reference here?}
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

% no space :-(
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph*

Gibbs sampling
\end_layout

\begin_layout Standard

The sequence of state variables 
\begin_inset Formula $\{S_l\}_l$
\end_inset

 for a given path form a Markov chain, with initial probability 
\begin_inset Formula $\pi^{0}$
\end_inset

 and transition probability matrices 
\begin_inset Formula $T^{\rel{i-1}{i}}$
\end_inset

, which are given by the trained Markov model in Section
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:hmm"

\end_inset

. We can sample from the Markov chain by first sampling 
\begin_inset Formula $s_{0}$
\end_inset

 from the categorical distribution with parameter 
\begin_inset Formula $\pi^{0}$
\end_inset

, then sequentially sample 
\begin_inset Formula $s_{i}$
\end_inset

 from the conditional distribution of 
\begin_inset Formula $S_{i}|S_{i-1}$
\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Standard

% 
\backslash
audecomment{Is it $S_{i}|S_{i-1} = s_{i-1}$}
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

% yup!
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Standard

Using this procedure, we generate 
\begin_inset Formula $K$
\end_inset

 samples 
\begin_inset Formula $\hat{s}^1, \dots, \hat{s}^K$
\end_inset

 from 
\begin_inset Formula $\Scal$
\end_inset

, the set of possible states. The complete (exponential) distribution can be approximated with the empirical distribution:
\end_layout

\begin_layout Standard


\begin_inset Formula \begin{equation}
\label{eq:approx_total_prob}
\Prob\left({\pathTT{p}}\right)=\sum_s \hat{w}_{p, s} \Prob\left({\condPathTT{p}{s}}\right)
\end{equation}
\end_inset


\end_layout

\begin_layout Standard

in which each weight 
\begin_inset Formula $\Prob$
\end_inset

 is the fraction of samples corresponding to the state 
\begin_inset Formula $s$
\end_inset

: 
\begin_inset Formula \begin{equation}
\label{eq:approx_weights}
\hat{w}_{p, s} = \frac{1}{K} \card \{k | \hat{s}^k = s\}
\end{equation}
\end_inset

The sum
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:approx_total_prob"

\end_inset

 contains at most 
\begin_inset Formula $K$
\end_inset

 terms, since at most 
\begin_inset Formula $K$
\end_inset

 approximate weights are positive, and converges towards the true distribution of states as the number of samples increases. In practice, numerical experiments showed that it was only necessary to sample a relatively small number of states. Section
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:evaluation"

\end_inset

 includes a numerical analysis and evaluation of the sampling method.
\end_layout

\begin_layout Paragraph*

Low rank covariance approximation
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

% Preview source code from paragraph 31 to 35
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Standard

Compute the variances of each sequence of variables: 
\begin_inset Formula \[
{e}\left({s}\right)^{T}\Sigma \, e \left({s}\right)
\]
\end_inset

with 
\begin_inset Formula ${s}$
\end_inset

 being a valid sequence of variables in the graph of variables.
\end_layout

\begin_layout Standard

Using the full covariance matrix 
\begin_inset Formula $\Sigma$
\end_inset

 to estimate the covariance of each path 
\begin_inset Formula $\sigma\left(s\right)^{2}=e\left(p,s\right)^{T}\Sigma e\left(p,s\right)$
\end_inset

 is impractical for two reasons: as mentioned before, we cannot expect to compute and access the full covariance matrix, and also the sum 
\begin_inset Formula $e\left(p,s\right)^{T}\Sigma e\left(p,s\right)$
\end_inset

 sums 
\begin_inset Formula $I^{2}$
\end_inset

 elements from the covariance matrix. Since we do not need to know the variance terms with full precision, an approximation strategy using random projections is appropriate. More specifically, we use the following result from
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "achlioptas2001database"

\end_inset

:
\end_layout

\begin_layout Standard


\emph on
Given some fixed vectors 
\begin_inset Formula $v_{1}\cdots v_{n}\in\mathbb{R}^{d}$
\end_inset

 and 
\begin_inset Formula $\epsilon>0$
\end_inset

, let 
\begin_inset Formula $R\in\mathbb{R}^{k\times d}$
\end_inset

 be a random matrix with random Bernoulli entries 
\begin_inset Formula $\pm1/\sqrt{k}$
\end_inset

 and with 
\begin_inset Formula $k\geq24\epsilon^{-2}\log n$
\end_inset

. Then with probability at least 
\begin_inset Formula $1-1/n$
\end_inset

: 
\begin_inset Formula \[
\left(1-\epsilon\right)\left\Vert v_{i}\right\Vert ^{2}\leq\left\Vert Rv_{i}\right\Vert ^{2}\leq\left(1+\epsilon\right)\left\Vert v_{i}\right\Vert ^{2}
\]
\end_inset


\emph default

\end_layout

\begin_layout Standard

Call 
\begin_inset Formula $R$
\end_inset

 such a matrix. Consider the Cholesky decomposition of the precision matrix, 
\begin_inset Formula $S=LL^{T}$
\end_inset

. Then 
\begin_inset Formula \begin{eqnarray*}
\sigma\left(s\right)^{2} & = & e\left(p,s\right)^{T}\Sigma e\left(p,s\right)\\
 & = & e\left(p,s\right)^{T}L^{-T}L^{-1}e\left(p,s\right)\\
 & = & \left\Vert L^{-1}e\left(p,s\right)\right\Vert ^{2}
\end{eqnarray*}
\end_inset

From the following lemma, we can approximate this norm: 
\begin_inset Formula \begin{equation}
\hat{\sigma}^{2}\left(s\right) = \left\Vert Q^{T}e\left(p,s\right)\right\Vert ^{2} = \left\Vert \sum_{i=1\cdots I}Q_{\left(l_{i},s_{i}\right)}\right\Vert ^{2}
\end{equation}
\end_inset

with 
\begin_inset Formula $Q=L^{-1}R$
\end_inset

 and 
\begin_inset Formula $R$
\end_inset

 defined as obtained from the lemma above. Computing the approximate variance 
\begin_inset Formula $\hat{\sigma}^{2}$
\end_inset

 requires the addition of 
\begin_inset Formula $I$
\end_inset

 vectors of size 
\begin_inset Formula $k$
\end_inset

. In practice, this summing operation is vectorized and very fast.
\end_layout

\begin_layout Standard

This method assumes we can efficiently compute the Cholesky factorization, and that inversion operation 
\begin_inset Formula $L^{-1}x$
\end_inset

 is efficient as well. In our case, the graph of the GMRF is nearly planar. Some very efficient algorithms exist that compute the Cholesky factorization in near-linear time (
\begin_inset CommandInset citation
LatexCommand cite
after ""
key "chen2008algorithm"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

% ,~
\backslash
cite{davis2009dynamic}
\end_layout

\begin_layout Standard


\end_layout

\end_inset

). In practice, computing the 
\begin_inset Formula $Q$
\end_inset

 matrix is very fast.
\end_layout

\end_body
\end_document
