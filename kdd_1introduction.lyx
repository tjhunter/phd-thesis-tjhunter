#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package none
\inputencoding auto
\fontencoding default
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 0
\use_mathdots 0
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
A common problem in trip planning is to make a given deadline, for example
 arriving at the airport within 45 minutes.
 Most routing services available today minimize the expected travel time,
 but do not provide the most 
\emph on
reliable
\emph default
 route, which accounts for the variability in travel times.
 Given a time budget, a routing service should provide the route with highest
 probability of on-time arrival, as posed in stochastic on-time arrival
 (SOTA) routing
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Samaranayake2011stochastic"

\end_inset

.
 Such an algorithm requires the estimation of the 
\emph on
statistical distributions
\emph default
 of travel times, or at least of their means and variances, as done in
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "limpractical"

\end_inset

.
 Today, only few traffic information platforms are available for the arterial
 network (the state of the art for highway networks is more advanced) and
 they do not provide the 
\emph on
statistical distributions
\emph default
 of travel times.
 The main contribution of the article is precisely to addresses this gap:
 we present a scalable algorithm for learning path travel time distributions
 on the entire road network using probe vehicle data.
\end_layout

\begin_layout Standard
The increasing penetration rate of probe vehicles provides a promising source
 of data to learn and estimate travel time distributions in arterial networks.
 At present, there are two general trends in estimation of travel times
 using this probe data.
 One trend, from kinematic wave theory (see
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "zheng_itsc_2010,hofleitner_isttt_2010"

\end_inset

), derives analytical probability distributions of travel times and infer
 their parameters with probe vehicle data.
 These approaches are computationally intensive, which limits their applicabilit
y for large scale networks.
 The other trend, seen in large-scale navigation systems such as Google
 Maps, provides coarser information, such as expected travel time, but can
 scale to world-sized traffic networks.
\end_layout

\begin_layout Standard
We bridge the two trends by creating a travel time estimator that (i) provides
 full probability distributions for arbitrary paths in real-time (sub-second),
 (ii) works on networks the size of large cities (and perhaps larger) (iii)
 and accepts an arbitrary amount of input probe data.
 The model uses a data-driven model which is able to leverage physical insight
 from traffic flow research.
 Data-driven models, using dynamic Bayesian networks
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "hofleitner_tits_2012"

\end_inset

, nearest neighbors
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "tiesyte2008similarity"

\end_inset

 or Gaussian models
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "westgate2011travel"

\end_inset

 show the potential of such methods to make accurate predictions when large
 amounts of data are available.
\end_layout

\begin_layout Standard
The main physical insights modeled in the article are described in the following
 paragraphs.
 First, arterial traffic is characterized by important travel time variability
 amongst users of the network (Figure
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:example_bimodal_link"

\end_inset

).
 This variability is mainly due to the presence of traffic lights and other
 impediments such as pedestrian crossings and garbage trucks which cause
 a fraction of the vehicles to stop while others do not.
 Arterial traffic research
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "hofleitner_isttt_2010"

\end_inset

 suggests that the detection of stops explains most of the variability in
 the travel time distribution and underline the multi-modality of the distributi
ons.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hfill{}
\end_inset


\begin_inset Graphics
	filename figures-kdd/example_bimodal_link.pdf
	width 80col%

\end_inset


\begin_inset space \hfill{}
\end_inset

 
\begin_inset Caption

\begin_layout Plain Layout
Histogram of travel times collected on a road link in San Francisco, fit
 (solid line) using a mixture of two Gaussian distributions.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:example_bimodal_link"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Second, the number of stops on a trajectory exhibits strong spatial and
 temporal correlations.
 Traffic lights on major streets may be synchronized to create 
\begin_inset Quotes eld
\end_inset

green waves
\begin_inset Quotes erd
\end_inset

: a vehicle which does not stop on a link is likely to not stop on the subsequen
t link.
 A different vehicle arriving 10 seconds later may hit the red light on
 the first link and have a high probability to stop on the subsequent link.
 This phenomenon is analyzed in
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Ramezani2012markov"

\end_inset

 using a Markov model with two modes (
\begin_inset Quotes eld
\end_inset

slow
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

fast
\begin_inset Quotes erd
\end_inset

).
\end_layout

\begin_layout Standard
Third, besides the the number of stops, travel times may be correlated for
 the following reasons: (i) the behavior of individual drivers may be different:
 some car may travel notably faster than some others, (ii) congestion propagates
 on the network, making neighboring links likely to have similar congestion
 levels.
 If a driver experiences a longer than usual travel time on a link because
 of heavy traffic, he / she can will likely experience heavy traffic on
 the subsequent links.
\end_layout

\begin_layout Standard
We leverage these insight to develop the traffic estimation algorithm presented
 in this article: an end-to-end, scalable model for inferring path travel
 time distributions, referred to as a 
\begin_inset Quotes eld
\end_inset

pipeline
\begin_inset Quotes erd
\end_inset

 (see Figure
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:pipeline"

\end_inset

).
 It consists of a 
\shape italic
learning algorithm
\shape default
 and an 
\shape italic
inference algorithm
\shape default
.
\end_layout

\begin_layout Standard
The
\shape italic
 learning algorithm 
\shape default
consists in the following steps.
\begin_inset Newline newline
\end_inset

 
\begin_inset Formula $\bullet$
\end_inset

 Section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:stop-and-go"

\end_inset

: a Stop-go algorithm detects the number of stops on a link and compresses
 the GPS traces
\begin_inset Foot
status open

\begin_layout Plain Layout
Before feeding raw GPS points to the Stop-Go model, each coordinate is mapped
 to a link and an offset distance from the beginning of the link.
 We use an efficient path-matching and path-inference algorithm developed
 in
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "hunter12wafr"

\end_inset

.
\end_layout

\end_inset

 into values of travel times on traversed links and corresponding number
 of stops.
 
\begin_inset Newline newline
\end_inset

 
\begin_inset Formula $\bullet$
\end_inset

 Section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:hmm"

\end_inset

: a 
\shape italic
Markov model
\shape default
 (MM) captures the correlations of stopping / not stopping for consecutive
 links.
 It characterizes the probability to stop / not stop on a link given that
 the vehicle stopped or did not stop on the previous link traversed.
 The Stop-go produces a set of labeled data to train the Markov model.
 
\begin_inset Newline newline
\end_inset

 
\begin_inset Formula $\bullet$
\end_inset

 Section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:gmrf-model"

\end_inset

: a 
\shape italic
Gaussian Markov Random Field
\shape default
 (GMRF) captures the correlations in travel times between neighboring links,
 given the number of stops on the links.
 There is a significant body of prior work in the field of learning with
 graphical models
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "jordan_introduction_1999, jordan_learning_1999"

\end_inset

, especially for learning problems on sparse GMRFs
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "gu2007learning,malioutov2008low"

\end_inset

.
 Most of these algorithms do not scale linearly with respect to the dimension
 of the data, and are unsuitable for very large problems (hundreds of thousands
 of variables).
 In particular, it becomes practically impossible to store the entire covariance
 matrix, so even classical sub-gradient methods such as
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "duchi08projected"

\end_inset

 would require careful engineering.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% This paragraph is plain wrong.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% Some of the
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% currently most scalable approaches, but still impracticel for our
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% setting, are described in~
\backslash
cite{chen2008algorithm}~and~
\backslash
cite{davis2009dynamic}, where
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% the authors present an algorithm that is based on the Cholesky decompositions
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% and solves large sparse positive definite systems of equations, and
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% in~
\backslash
cite{duchi08projected}, where the authors present
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% projected sub-gradient method for learning sparse 
\backslash
gmrf{}s.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% 
\backslash
pacomment{it'd be nice to be able to cite a more concrete limitation of
 these methods
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% --- otherwise it's funny we are presenting a new approach for this
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% type of problem}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

We exploit the (near) planar structure of the underlying graphical model
 to more efficiently obtain (approximate) algorithms that scale 
\emph on
linearly
\emph default
 with the size of the network.
 Our algorithm leverages efficient algorithms to compute the Cholesky decomposit
ion of the adjacency matrix of planar graphs
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "chen2008algorithm"

\end_inset

.
 Our results can be extended to other physical systems with local correlations.
\end_layout

\begin_layout Standard
After the learning, we proceed to the 
\shape italic
inference algorithm
\shape default
: we compute the travel time distributions for arbitrary paths in the network
 (Section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:inference"

\end_inset

).
 While exact inference on this model is intractable due to the number of
 possible states, we exploit the underlying structure of the graphical model
 and use a specialized sampling method to obtain an efficient inference
 algorithm.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename figures-kdd/network_export_6.pdf
	width 6cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Detail of the network.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:evaluation"

\end_inset

 illustrates the accuracy and scalability of our model on a 505,000 road
 link network spanning the San Francisco Bay Area.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename docs-kdd/pipeline.pdf
	width 100col%

\end_inset

 
\begin_inset Caption

\begin_layout Plain Layout
Pipeline of the travel-time estimation model.
 The learning runs offline and finds optimal parameters for the HMM and
 GMRF models.
 The inference runs online and uses the learned parameters to produce travel
 time distributions on input paths.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:pipeline"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%We combine 3 different graphs
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%The road network is described as a set of $n$ directed links $l_{i}$.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%Each link $l
\backslash
in
\backslash
mathcal{L}$ has a set of incoming and outgoing links,
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%and has a certain geometry.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%The travel time on each link is a mulitmodal Gaussian distribution:
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%a mixture of $m_{l}$ modes.
 Each of the modes is indexed by some
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%random variable $S_{l}$ and the set of all modes is $
\backslash
mathcal{S}_{l}$
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%for link $l$.
 The travel time that corresponds to mode $s_{l}$ of
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%link $l$ is represented by a random variable $Y_{l,s_{l}}$.
 Thus
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%the travel time on one link is: 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%
\backslash
[
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%TT_{l}=
\backslash
sum_{s
\backslash
in
\backslash
mathcal{S}_{/}}
\backslash
mathbf{1}_{s}
\backslash
left(S_{l}
\backslash
right)Y_{l,s}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%
\backslash
]
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%For example, if a road link $l$ ends with a signal, the travel time
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%can be described by a mixture of 2 variables: one variable $Y_{l,
\backslash
text{Green}}$
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%that corresponds to the vehicles that experience a green light, and
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%one variable $Y_{l,
\backslash
text{Red}}$ for the vehicles that are stopped
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%by the signal.
 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Our code, as well as a showcase of the model running on San Francisco, is
 available at 
\begin_inset Flex Flex:URL
status collapsed

\begin_layout Plain Layout

http://traffic.berkeley.edu/navigateSF
\end_layout

\end_inset

.
 
\end_layout

\end_body
\end_document
